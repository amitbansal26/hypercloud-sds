variables:
  GIT_SUBMODULE_STRATEGY: recursive
stages:
  - lint_check
  - build
  - e2e_test
  - cleanup
  - pre-release
  - release

.e2e_on_cluster_template:
  stage: e2e_test
  script:
    - ./hack/prolinux_cluster.sh up
    - ./hcsctl/build/hcsctl create-inventory myInventory
    - ./hcsctl/build/hcsctl install myInventory
    - ./hcsctl/build/hcsctl ceph status
    - ./hcsctl/build/hcsctl ceph exec ceph osd status
    - ./hcsctl/build/hcsctl.test
    - ./hcsctl/build/hcsctl uninstall myInventory

golangci_lint_check:
  stage: lint_check
  script:
    - make check -C hcsctl
  tags:
    - prolinux

hcsctl_build:
  stage: build
  script:
    - make -C hcsctl
  artifacts:
    expire_in: '1 day'
    paths:
    - hcsctl/build/
  tags:
    - prolinux

prolinux_v1_15_3_calico:
  extends: .e2e_on_cluster_template
  before_script:
    - export BOX_OS=prolinux KUBE_VERSION=v1.15.3 KUBE_NETWORK=calico
  except:
    - tags
  tags:
    - prolinux

prolinux_v1_15_3_flannel:
  extends: .e2e_on_cluster_template
  before_script:
    - export BOX_OS=prolinux KUBE_VERSION=v1.15.3 KUBE_NETWORK=flannel
  except:
    - tags
  tags:
    - prolinux

prolinux_v1_16_8_calico:
  extends: .e2e_on_cluster_template
  before_script:
    - export BOX_OS=prolinux KUBE_VERSION=v1.16.8 KUBE_NETWORK=calico
  except:
    - tags
  tags:
    - prolinux

prolinux_v1_16_8_flannel:
  extends: .e2e_on_cluster_template
  before_script:
    - export BOX_OS=prolinux KUBE_VERSION=v1.16.8 KUBE_NETWORK=flannel
  except:
    - tags
  tags:
    - prolinux

prolinux_nodes_poweroff:
  stage: cleanup
  script:
    - ./hack/prolinux_cluster.sh down
  when: always
  tags:
    - prolinux

pre-release:
  stage: pre-release
  script:
    - source RELEASE
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote set-url origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - git tag -a "${VERSION}" -m "${DESCRIPTION}"
    - git push origin "${VERSION}"
  when: manual
  only:
    - master

release:
  stage: release
  script:
    - source RELEASE
    - gitlab-release --message "${DESCRIPTION}" ./hcsctl/build/hcsctl ./hcsctl/build/hcsctl.test
  when: manual
  only:
    - tags
